set ob_query_timeout=1000000000;
drop database if exists et_test;
create database et_test;
use et_test;
set recyclebin = 0;
create external table file_stu (
sid     int,
name    varchar(32),
cls     int
) external_url='/home/chenbochuan.cbc/data/px/stu.dat';
create external table file_teacher (
tid        int,
name       varchar(32),
subject    varchar(4)
) external_url='/home/chenbochuan.cbc/data/px/teacher.dat';
create external table file_score (
sid     int,
subject varchar(4),
score   int
) external_url='/home/chenbochuan.cbc/data/px/score.dat';
create external table oss_stu (
sid     int,
name    varchar(32),
cls     int
) external_url='px/stu.dat' external_protocal='oss';
create external table oss_teacher (
tid        int,
name       varchar(32),
subject    varchar(4)
) external_url='px/teacher.dat' external_protocal='oss';
create external table oss_score (
sid     int,
subject varchar(4),
score   int
) external_url='px/score.dat' external_protocal='oss';
explain select * from file_stu, file_score where file_stu.sid = file_score.sid order by file_score.score;
Query Plan
================================================
|ID|OPERATOR    |NAME      |EST. ROWS|COST     |
------------------------------------------------
|0 |SORT        |          |98010000 |469986629|
|1 | HASH JOIN  |          |98010000 |58430439 |
|2 |  TABLE SCAN|file_score|100000   |66272    |
|3 |  TABLE SCAN|file_stu  |100000   |66272    |
================================================

Outputs & filters: 
-------------------------------------
  0 - output([file_stu.sid], [file_stu.name], [file_stu.cls], [file_score.sid], [file_score.subject], [file_score.score]), filter(nil), sort_keys([file_score.score, ASC])
  1 - output([file_stu.sid], [file_stu.name], [file_stu.cls], [file_score.sid], [file_score.subject], [file_score.score]), filter(nil), 
      equal_conds([file_stu.sid = file_score.sid]), other_conds(nil)
  2 - output([file_score.sid], [file_score.subject], [file_score.score]), filter(nil), 
      access([file_score.sid], [file_score.subject], [file_score.score]), partitions(p0)
  3 - output([file_stu.sid], [file_stu.name], [file_stu.cls]), filter(nil), 
      access([file_stu.sid], [file_stu.name], [file_stu.cls]), partitions(p0)

select * from file_stu, file_score where file_stu.sid = file_score.sid order by file_score.score;
sid	name	cls	sid	subject	score
11	'a1'	1	11	'EN'	60
11	'a1'	1	11	'MA'	60
12	'b1'	1	12	'EN'	70
12	'b1'	1	12	'MA'	70
13	'c1'	1	13	'EN'	80
13	'c1'	1	13	'MA'	80
21	'a2'	2	21	'EN'	58
21	'a2'	2	21	'MA'	58
22	'b2'	2	22	'EN'	90
22	'b2'	2	22	'MA'	90
31	'a3'	3	31	'EN'	80
31	'a3'	3	31	'MA'	80
41	'a4'	4	41	'EN'	80
41	'a4'	4	41	'MA'	80
42	'b4'	4	42	'EN'	90
42	'b4'	4	42	'MA'	90
51	'a5'	5	51	'EN'	89
51	'a5'	5	51	'MA'	89
52	'b5'	5	52	'EN'	99
52	'b5'	5	52	'MA'	99
61	'a6'	6	61	'EN'	100
61	'a6'	6	61	'MA'	100
62	'b6'	6	62	'EN'	90
62	'b6'	6	62	'MA'	90
63	'c6'	6	63	'EN'	99
63	'c6'	6	63	'MA'	99
64	'd6'	6	64	'EN'	87
64	'd6'	6	64	'MA'	87
explain select * from oss_stu, oss_score where oss_stu.sid = oss_score.sid order by oss_score.score;
Query Plan
===============================================
|ID|OPERATOR    |NAME     |EST. ROWS|COST     |
-----------------------------------------------
|0 |SORT        |         |98010000 |469986629|
|1 | HASH JOIN  |         |98010000 |58430439 |
|2 |  TABLE SCAN|oss_score|100000   |66272    |
|3 |  TABLE SCAN|oss_stu  |100000   |66272    |
===============================================

Outputs & filters: 
-------------------------------------
  0 - output([oss_stu.sid], [oss_stu.name], [oss_stu.cls], [oss_score.sid], [oss_score.subject], [oss_score.score]), filter(nil), sort_keys([oss_score.score, ASC])
  1 - output([oss_stu.sid], [oss_stu.name], [oss_stu.cls], [oss_score.sid], [oss_score.subject], [oss_score.score]), filter(nil), 
      equal_conds([oss_stu.sid = oss_score.sid]), other_conds(nil)
  2 - output([oss_score.sid], [oss_score.subject], [oss_score.score]), filter(nil), 
      access([oss_score.sid], [oss_score.subject], [oss_score.score]), partitions(p0)
  3 - output([oss_stu.sid], [oss_stu.name], [oss_stu.cls]), filter(nil), 
      access([oss_stu.sid], [oss_stu.name], [oss_stu.cls]), partitions(p0)

select * from oss_stu, oss_score where oss_stu.sid = oss_score.sid order by oss_score.score;
sid	name	cls	sid	subject	score
11	'a1'	1	11	'EN'	60
11	'a1'	1	11	'MA'	60
12	'b1'	1	12	'EN'	70
12	'b1'	1	12	'MA'	70
13	'c1'	1	13	'EN'	80
13	'c1'	1	13	'MA'	80
21	'a2'	2	21	'EN'	58
21	'a2'	2	21	'MA'	58
22	'b2'	2	22	'EN'	90
22	'b2'	2	22	'MA'	90
31	'a3'	3	31	'EN'	80
31	'a3'	3	31	'MA'	80
41	'a4'	4	41	'EN'	80
41	'a4'	4	41	'MA'	80
42	'b4'	4	42	'EN'	90
42	'b4'	4	42	'MA'	90
51	'a5'	5	51	'EN'	89
51	'a5'	5	51	'MA'	89
52	'b5'	5	52	'EN'	99
52	'b5'	5	52	'MA'	99
61	'a6'	6	61	'EN'	100
61	'a6'	6	61	'MA'	100
62	'b6'	6	62	'EN'	90
62	'b6'	6	62	'MA'	90
63	'c6'	6	63	'EN'	99
63	'c6'	6	63	'MA'	99
64	'd6'	6	64	'EN'	87
64	'd6'	6	64	'MA'	87
