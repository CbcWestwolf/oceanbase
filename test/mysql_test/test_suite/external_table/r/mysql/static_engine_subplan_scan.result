set ob_query_timeout=1000000000;
drop database if exists et_test;
create database et_test;
use et_test;
set recyclebin = 0;
create external table ext_t1 (c1 int, c2 int) external_url = '/home/chenbochuan.cbc/data/static_engine/t2.txt';
explain select c2, sum(c1) from (select distinct c2, c1 from ext_t1) x group by c2;
Query Plan
============================================
|ID|OPERATOR       |NAME  |EST. ROWS|COST  |
--------------------------------------------
|0 |HASH GROUP BY  |      |101      |115126|
|1 | SUBPLAN SCAN  |x     |10001    |111242|
|2 |  HASH DISTINCT|      |10001    |109862|
|3 |   TABLE SCAN  |ext_t1|100000   |64066 |
============================================

Outputs & filters: 
-------------------------------------
  0 - output([x.c2], [T_FUN_SUM(x.c1)]), filter(nil), 
      group([x.c2]), agg_func([T_FUN_SUM(x.c1)])
  1 - output([x.c2], [x.c1]), filter(nil), 
      access([x.c2], [x.c1])
  2 - output([ext_t1.c2], [ext_t1.c1]), filter(nil), 
      distinct([ext_t1.c2], [ext_t1.c1])
  3 - output([ext_t1.c2], [ext_t1.c1]), filter(nil), 
      access([ext_t1.c2], [ext_t1.c1]), partitions(p0)

select c2, sum(c1) from (select distinct c2, c1 from ext_t1) x group by c2;
c2	sum(c1)
1	1
2	1
10	10
explain select c2, sum(c1 + c2) from (select distinct c2, c1 from ext_t1) x group by c2;
Query Plan
============================================
|ID|OPERATOR       |NAME  |EST. ROWS|COST  |
--------------------------------------------
|0 |HASH GROUP BY  |      |101      |115126|
|1 | SUBPLAN SCAN  |x     |10001    |111242|
|2 |  HASH DISTINCT|      |10001    |109862|
|3 |   TABLE SCAN  |ext_t1|100000   |64066 |
============================================

Outputs & filters: 
-------------------------------------
  0 - output([x.c2], [T_FUN_SUM(x.c1 + x.c2)]), filter(nil), 
      group([x.c2]), agg_func([T_FUN_SUM(x.c1 + x.c2)])
  1 - output([x.c2], [x.c1 + x.c2]), filter(nil), 
      access([x.c2], [x.c1])
  2 - output([ext_t1.c2], [ext_t1.c1]), filter(nil), 
      distinct([ext_t1.c2], [ext_t1.c1])
  3 - output([ext_t1.c2], [ext_t1.c1]), filter(nil), 
      access([ext_t1.c2], [ext_t1.c1]), partitions(p0)

select c2, sum(c1 + c2) from (select distinct c2, c1 from ext_t1) x group by c2;
c2	sum(c1 + c2)
1	2
2	3
10	20
explain select c2, sum(c1 + c2), max(c3) from (select c1, c2, c1 + 2 as c3 from (select distinct c2, c1 from ext_t1) x ) y group by c2;
Query Plan
============================================
|ID|OPERATOR       |NAME  |EST. ROWS|COST  |
--------------------------------------------
|0 |HASH GROUP BY  |      |101      |115656|
|1 | SUBPLAN SCAN  |x     |10001    |111242|
|2 |  HASH DISTINCT|      |10001    |109862|
|3 |   TABLE SCAN  |ext_t1|100000   |64066 |
============================================

Outputs & filters: 
-------------------------------------
  0 - output([x.c2], [T_FUN_SUM(x.c1 + x.c2)], [T_FUN_MAX(x.c1 + 2)]), filter(nil), 
      group([x.c2]), agg_func([T_FUN_SUM(x.c1 + x.c2)], [T_FUN_MAX(x.c1 + 2)])
  1 - output([x.c2], [x.c1 + x.c2], [x.c1 + 2]), filter(nil), 
      access([x.c1], [x.c2])
  2 - output([ext_t1.c2], [ext_t1.c1]), filter(nil), 
      distinct([ext_t1.c2], [ext_t1.c1])
  3 - output([ext_t1.c2], [ext_t1.c1]), filter(nil), 
      access([ext_t1.c2], [ext_t1.c1]), partitions(p0)

select c2, sum(c1 + c2), max(c3) from (select c1, c2, c1 + 2 as c3 from (select distinct c2, c1 from ext_t1) x ) y group by c2;
c2	sum(c1 + c2)	max(c3)
1	2	3
2	3	3
10	20	12
explain select * from ext_t1 where c2 in (select 1 from ext_t1);
Query Plan
==========================================
|ID|OPERATOR     |NAME  |EST. ROWS|COST  |
------------------------------------------
|0 |HASH JOIN    |      |990      |100199|
|1 | SUBPLAN SCAN|VIEW1 |1        |37    |
|2 |  TABLE SCAN |ext_t1|1        |36    |
|3 | TABLE SCAN  |ext_t1|100000   |64066 |
==========================================

Outputs & filters: 
-------------------------------------
  0 - output([ext_t1.c1], [ext_t1.c2]), filter(nil), 
      equal_conds([ext_t1.c2 = VIEW1.1]), other_conds(nil)
  1 - output([VIEW1.1]), filter(nil), 
      access([VIEW1.1])
  2 - output([1]), filter(nil), 
      access([ext_t1.__pk_increment]), partitions(p0), 
      limit(1), offset(nil)
  3 - output([ext_t1.c2], [ext_t1.c1]), filter(nil), 
      access([ext_t1.c2], [ext_t1.c1]), partitions(p0)

select * from ext_t1 where c2 in (select 1 from ext_t1);
c1	c2
1	1
1	1
